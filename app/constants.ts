import { RequestItem } from "./context/SchemaContext";
import { WorkflowItemState, WorkflowState } from "./context/WorkflowContext";

export const FIELD_TYPES = {
  TEXT: "text",
  NUMBER: "number",
  FLOAT: "float",
  CURRENCY: "currency",
  DATE: "date",
  BOOLEAN: "boolean",
  ITEMS: "items",
  DOCUMENTS: "documents",
};

// Date format and field type options
export const DATE_FORMAT_OPTIONS = [
  "MM/DD/YYYY",
  "DD/MM/YYYY",
  "YYYY-MM-DD",
  "MMM DD, YYYY",
];

export const FIELD_TYPES_OPTIONS = [
  { value: FIELD_TYPES.TEXT, label: "Text" },
  { value: FIELD_TYPES.NUMBER, label: "Number" },
  { value: FIELD_TYPES.FLOAT, label: "Float" },
  { value: FIELD_TYPES.CURRENCY, label: "Currency" },
  { value: FIELD_TYPES.DATE, label: "Date" },
  { value: FIELD_TYPES.BOOLEAN, label: "Boolean" },
  { value: FIELD_TYPES.ITEMS, label: "Items" },
  { value: FIELD_TYPES.DOCUMENTS, label: "Documents" },
];

export const PRESET_FIELDS = [
  {
    id: "requestWorkflow",
    type: FIELD_TYPES.TEXT,
    parameter: "Request Workflow",
    isRequired: true,
    readOnly: false,
    defaultField: true,
    isHidden: false,
  },
  {
    id: "requestCreated",
    type: FIELD_TYPES.DATE,
    parameter: "Request Created",
    format: "MM-DD-YYYY",
    isRequired: true,
    readOnly: true,
    defaultField: true,
    isHidden: false,
  },
  {
    id: "requestCreator",
    type: FIELD_TYPES.TEXT,
    parameter: "Request Creator",
    isRequired: true,
    readOnly: true,
    defaultField: true,
    isHidden: false,
  },
  {
    id: "requestNextApprover",
    type: FIELD_TYPES.TEXT,
    parameter: "Next Step Approver",
    isRequired: true,
    readOnly: false,
    defaultField: true,
    isHidden: false,
  },
  {
    id: "requestPrevApprover",
    type: FIELD_TYPES.TEXT,
    parameter: "Previous Approver",
    isRequired: true,
    readOnly: false,
    defaultField: true,
    isHidden: true,
  },
  {
    id: "requestNumber",
    type: FIELD_TYPES.NUMBER,
    parameter: "Request Number",
    isRequired: true,
    readOnly: false,
    defaultField: true,
    isHidden: false,
  },
  {
    id: "requestStatus",
    type: FIELD_TYPES.TEXT,
    parameter: "Request Status",
    isRequired: true,
    readOnly: false,
    defaultField: true,
    isHidden: false,
  },
  {
    id: "contractNumber",
    type: FIELD_TYPES.NUMBER,
    parameter: "Contract Number",
    isRequired: true,
    readOnly: false,
    defaultField: true,
    isHidden: false,
  },
  {
    id: "description",
    type: FIELD_TYPES.TEXT,
    parameter: "Description",
    isRequired: false,
    readOnly: false,
    defaultField: true,
    isHidden: true,
  },
  {
    id: "requestedAwardDate",
    type: FIELD_TYPES.DATE,
    parameter: "Requested Award Date",
    format: "MM-DD-YYYY",
    isRequired: true,
    readOnly: false,
    defaultField: true,
    isHidden: false,
  },
  {
    id: "requestDocuments",
    type: FIELD_TYPES.DOCUMENTS,
    parameter: "Request Documents",
    isRequired: false,
    readOnly: false,
    defaultField: true,
    isHidden: false,
  },
  {
    id: "requestedItems",
    type: FIELD_TYPES.ITEMS,
    parameter: "Requested Items",
    isRequired: true,
    readOnly: false,
    defaultField: true,
    isHidden: true,
  },
];

export const SHIPPING_FIELDS = [
  {
    id: "customerPOCName",
    parameter: "Customer POC Name",
    type: FIELD_TYPES.TEXT,
    isRequired: true,
    readOnly: false,
    defaultField: true,
    isHidden: false,
  },
  {
    id: "customerPOCEmail",
    parameter: "Customer POC Email",
    type: FIELD_TYPES.TEXT,
    isRequired: true,
    readOnly: false,
    defaultField: true,
    isHidden: true,
  },
  {
    id: "attentionTo",
    parameter: "Attention To ( If different )",
    type: FIELD_TYPES.TEXT,
    isRequired: false,
    readOnly: false,
    defaultField: true,
    isHidden: true,
  },
  {
    id: "shippingStreetAddress1",
    parameter: "Shipping Address: Street",
    type: FIELD_TYPES.TEXT,
    isRequired: true,
    readOnly: false,
    defaultField: true,
    isHidden: true,
  },
  {
    id: "shippingStreetAddress2",
    parameter: "Shipping Address: Street 2",
    type: FIELD_TYPES.TEXT,
    isRequired: false,
    readOnly: false,
    defaultField: true,
    isHidden: true,
  },
  {
    id: "shippingAddressCity",
    parameter: "Shipping Address: City",
    type: FIELD_TYPES.TEXT,
    isRequired: true,
    readOnly: false,
    defaultField: true,
    isHidden: true,
  },
  {
    id: "shippingAddressState",
    parameter: "Shipping Address: State",
    type: FIELD_TYPES.TEXT,
    isRequired: true,
    readOnly: false,
    defaultField: true,
    isHidden: true,
  },
  {
    id: "shippingAddressZipcode",
    parameter: "Shipping Address: Zipcode",
    type: FIELD_TYPES.TEXT,
    isRequired: true,
    readOnly: false,
    defaultField: true,
    isHidden: true,
  },
];

// USERS
export enum AccessRole {
  SUPER_ADMIN = "SUPER_ADMIN",
  ADMIN = "ADMIN",
  USER = "USER",
  GUEST = "GUEST",
}

// interface for the Role type.
export interface User {
  name: string;
  role: AccessRole;
}

// USERS is now correctly typed as an array of User.
export const USERS: User[] = [
  { name: "Jane Super", role: AccessRole.SUPER_ADMIN },
  { name: "Kara Admin", role: AccessRole.ADMIN },
  { name: "Dan User", role: AccessRole.USER },
  { name: "Matt User", role: AccessRole.USER },
  { name: "Terry User", role: AccessRole.USER },
  { name: "John Guest", role: AccessRole.GUEST },
];

export const DEFAULT_WORKFLOW: WorkflowState = {
  rootItem: "order-received",
  name: "Default Workflow",
  items: {
    "order-received": {
      id: "order-received",
      name: "Order Received",
      children: ["sourcing"],
      nextApprover: "",
      prevApprover: "",
      easyApproval: true,
    },
    sourcing: {
      id: "sourcing",
      name: "Sourcing",
      children: ["purchasing"],
      nextApprover: "",
      prevApprover: "",
      easyApproval: true,
    },
    purchasing: {
      id: "purchasing",
      name: "Purchasing",
      children: ["order-complete"],
      nextApprover: "",
      prevApprover: "",
      easyApproval: false,
    },
    "order-complete": {
      id: "order-complete",
      name: "Order Complete",
      children: [],
      nextApprover: "",
      prevApprover: "",
      easyApproval: false,
    },
  },
  workflowKey: "default",
  workflowDescription: "Default Template Workflow",
};

export const PRODUCTS: RequestItem[] = [
  {
    product: "HP Workstation",
    amount: 0,
    price: 2467.78,
  },
  {
    product: "Dell XP Desktop",
    amount: 0,
    price: 1276.45,
  },
  {
    product: "Alienware ION Workstation",
    amount: 0,
    price: 3798.82,
  },
  {
    product: "SSD Hardrive: 12TB",
    amount: 0,
    price: 5623.44,
  },
];

export const US_STATES = [
  "Alabama",
  "Alaska",
  "Arizona",
  "Arkansas",
  "California",
  "Colorado",
  "Connecticut",
  "Delaware",
  "Florida",
  "Georgia",
  "Hawaii",
  "Idaho",
  "Illinois",
  "Indiana",
  "Iowa",
  "Kansas",
  "Kentucky",
  "Louisiana",
  "Maine",
  "Maryland",
  "Massachusetts",
  "Michigan",
  "Minnesota",
  "Mississippi",
  "Missouri",
  "Montana",
  "Nebraska",
  "Nevada",
  "New Hampshire",
  "New Jersey",
  "New Mexico",
  "New York",
  "North Carolina",
  "North Dakota",
  "Ohio",
  "Oklahoma",
  "Oregon",
  "Pennsylvania",
  "Rhode Island",
  "South Carolina",
  "South Dakota",
  "Tennessee",
  "Texas",
  "Utah",
  "Vermont",
  "Virginia",
  "Washington",
  "West Virginia",
  "Wisconsin",
  "Wyoming",
];
